# .github/workflows/cd.yaml
name: dbt Core CD

on:
  pull_request:
    types: [closed]
    branches:
      - main
      - master

jobs:
  deploy:
    name: Deploy dbt models
    runs-on: ubuntu-latest
    
    if: github.event.pull_request.merged == true
    
    defaults:
      run:
        working-directory: ./data-pipeline-stack

    steps:
      - name: 1. Check out repository
        uses: actions/checkout@v4

      - name: 2. Verify Docker Compose
        run: |
          echo "Checking Docker Compose version..."
          docker compose version

      - name: 3. Start all services
        run: |
          echo "🚀 Starting services for deployment..."
          echo "PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}"
          echo "Merged by: ${{ github.event.pull_request.merged_by.login }}"
          echo ""
          docker compose up --build -d
          echo "✅ Services started"

      - name: 4. Wait for services to become healthy
        run: |
          echo "⏳ Waiting for services to become healthy..."
          end_time=$((SECONDS+180))
          
          while [ $SECONDS -lt $end_time ]; do
            echo "Checking health... (${SECONDS}s elapsed)"
            docker compose ps
            echo ""
            
            if docker compose ps | grep -q "dbt_clickhouse.*healthy" && \
               docker compose ps | grep -q "airflow-webserver.*healthy"; then
              echo "✅ All services healthy!"
              break
            fi
            
            sleep 10
          done
          
          if [ $SECONDS -ge $end_time ]; then
            echo "❌ Timeout waiting for services (180s)"
            echo ""
            echo "Services status:"
            docker compose ps
            echo ""
            echo "Recent logs:"
            docker compose logs --tail=50
            exit 1
          fi

      - name: 5. Set permissions 
        run: |
          echo "🔧 Fixing permissions inside container..."
          docker compose exec -T --user root airflow-webserver bash -c "
            mkdir -p /opt/dbt_project/logs /opt/dbt_project/target && \
            chown -R 50000:0 /opt/dbt_project && \
            chmod -R 775 /opt/dbt_project && \
            echo 'Permissions set successfully:' && \
            ls -la /opt/dbt_project/
          "
          echo "✅ Permissions fixed"

      - name: 6. Run dbt deps
        run: |
          echo "📦 Installing dbt dependencies..."
          docker compose exec -T -w /opt/dbt_project airflow-webserver dbt deps --target docker_pipeline
          echo "✅ Dependencies installed"

      - name: 7. Run dbt test
        id: dbt_test
        run: |
          echo "🧪 Running dbt tests..."
          docker compose exec -T -w /opt/dbt_project airflow-webserver dbt test --target docker_pipeline
          echo "✅ Tests passed"

      - name: 8. Run dbt build
        if: success()
        run: |
          echo "🏗️  Building dbt models..."
          docker compose exec -T -w /opt/dbt_project airflow-webserver dbt build --target docker_pipeline
          echo "✅ Build completed"

      - name: 9. Show deployment summary
        if: success()
        run: |
          echo ""
          echo "═══════════════════════════════════════"
          echo "✅ DEPLOYMENT COMPLETED SUCCESSFULLY!"
          echo "═══════════════════════════════════════"
          echo ""
          echo "📊 Deployment Information:"
          echo "  • PR Number: #${{ github.event.pull_request.number }}"
          echo "  • PR Title: ${{ github.event.pull_request.title }}"
          echo "  • Merged by: ${{ github.event.pull_request.merged_by.login }}"
          echo "  • Source Branch: ${{ github.event.pull_request.head.ref }}"
          echo "  • Target Branch: ${{ github.event.pull_request.base.ref }}"
          echo "  • Commit SHA: ${{ github.sha }}"
          echo ""
          echo "📦 Deployed Models:"
          docker compose exec -T -w /opt/dbt_project airflow-webserver dbt ls --target docker_pipeline --resource-type model
          echo ""
          echo "═══════════════════════════════════════"

      - name: 10. Show logs on failure
        if: failure()
        run: |
          echo ""
          echo "═══════════════════════════════════════"
          echo "❌ DEPLOYMENT FAILED"
          echo "═══════════════════════════════════════"
          echo ""
          echo "📊 Failed Deployment Info:"
          echo "  • PR Number: #${{ github.event.pull_request.number }}"
          echo "  • PR Title: ${{ github.event.pull_request.title }}"
          echo ""
          echo "📋 Diagnostic Logs:"
          echo ""
          echo "=== Airflow Webserver Logs (last 200 lines) ==="
          docker compose logs --tail=200 airflow-webserver
          echo ""
          echo "=== ClickHouse Logs (last 100 lines) ==="
          docker compose logs --tail=100 dbt_clickhouse
          echo ""
          echo "=== PostgreSQL Logs (last 100 lines) ==="
          docker compose logs --tail=100 postgres
          echo ""
          echo "=== dbt.log Content ==="
          docker compose exec -T -w /opt/dbt_project airflow-webserver cat logs/dbt.log 2>/dev/null || echo "⚠️  No dbt.log found"
          echo ""
          echo "═══════════════════════════════════════"

      - name: 11. Cleanup
        if: always()
        run: |
          echo "🧹 Cleaning up resources..."
          docker compose down -v
          echo "✅ Cleanup complete"
