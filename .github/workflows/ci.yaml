# .github/workflows/ci.yaml
name: dbt Core CI/CD

# K√≠ch ho·∫°t workflow cho Pull Request v√† Push v√†o nh√°nh main
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  # ====================================================================
  # JOB 1: CI - Ch·∫°y ki·ªÉm tra tr√™n m·ªói Pull Request
  # ====================================================================
  ci_check:
    name: ‚úÖ CI - Validate dbt Project
    runs-on: ubuntu-latest
    # Job n√†y CH·ªà ch·∫°y khi c√≥ s·ª± ki·ªán pull_request
    if: github.event_name == 'pull_request'

    steps:
      - name: 1. Check out repository
        uses: actions/checkout@v4

      - name: 2. Start all services
        run: docker-compose up --build -d

      - name: 3. Wait for services to become healthy
        run: |
          echo "Waiting for services to become healthy for CI..."
          end_time=$((SECONDS+180))
          while [ $SECONDS -lt $end_time ]; do
            if docker compose ps | grep -q "dbt_clickhouse.*healthy" && \
               docker compose ps | grep -q "airflow-webserver.*healthy"; then
              echo "All services are healthy for CI!"
              break
            fi
            sleep 10
          done
          if [ $SECONDS -ge $end_time ]; then
            echo "::error::Timeout waiting for CI services."
            docker compose logs --tail=200
            exit 1
          fi

      - name: 4. Run dbt debug
        run: |
          echo "Running dbt debug for CI..."
          docker-compose exec -T -w /opt/dbt_project airflow-webserver dbt debug --target docker_pipeline

      - name: 5. Cleanup CI Environment
        if: always()
        run: |
          echo "Cleaning up CI environment..."
          docker-compose down -v --remove-orphans

  # ====================================================================
  # JOB 2: CD - M√¥ ph·ªèng tri·ªÉn khai khi merge v√†o main
  # ====================================================================
  cd_deploy:
    name: üöÄ CD - Simulate dbt Build
    runs-on: ubuntu-latest
    # Job n√†y CH·ªà ch·∫°y khi c√≥ s·ª± ki·ªán push v√†o nh√°nh main
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: 1. Check out repository
        uses: actions/checkout@v4

      - name: 2. Start required services for CD
        run: docker-compose up --build -d

      - name: 3. Wait for ClickHouse to become healthy
        run: |
          echo "Waiting for ClickHouse to become healthy for CD..."
          end_time=$((SECONDS+180))
          while [ $SECONDS -lt $end_time ]; do
            if docker compose ps | grep -q "dbt_clickhouse.*healthy"; then
              echo "ClickHouse service is healthy for CD!"
              break
            fi
            sleep 10
          done
          if [ $SECONDS -ge $end_time ]; then
            echo "::error::Timeout waiting for ClickHouse service."
            docker compose logs --tail=200
            exit 1
          fi

      - name: 4. Run dbt build (Simulate Deployment)
        run: |
          echo "Simulating deployment by running dbt build..."
          docker-compose exec -T \
            -w /opt/dbt_project airflow-webserver \
            dbt build --target docker_pipeline

      - name: 5. Cleanup CD Environment
        if: always()
        run: |
          echo "Cleaning up CD environment..."
          docker-compose down -v --remove-orphans