# .github/workflows/ci.yaml
name: dbt Core CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  dbt_debug_check:
    name: Run dbt debug
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./data-pipeline-stack

    steps:
      - name: 1. Check out repository
        uses: actions/checkout@v4

      - name: 2. Verify Docker Compose
        run: |
          echo "üê≥ Checking Docker Compose version..."
          docker compose version

      - name: 3. Start all services in the background
        run: |
          echo "üöÄ Starting services with docker compose..."
          docker compose up --build -d
          echo "‚úÖ Services started"

      - name: 4. Wait for services to become healthy
        run: |
          echo "‚è≥ Waiting for services to become healthy..."
          end_time=$((SECONDS+180))
          
          while [ $SECONDS -lt $end_time ]; do
            echo "üîç Checking services health... (${SECONDS}s elapsed)"
            
            # Show current status
            docker compose ps
            echo ""
            
            # Check if both services are healthy
            if docker compose ps | grep -q "dbt_clickhouse.*healthy" && \
               docker compose ps | grep -q "airflow-webserver.*healthy"; then
              echo "‚úÖ All services are healthy!"
              break
            fi
            
            echo "‚è≥ Services not ready yet, waiting..."
            sleep 10
          done
          
          if [ $SECONDS -ge $end_time ]; then
            echo "‚ùå Services did not become healthy in time."
            echo ""
            echo "üìä Final container status:"
            docker compose ps
            echo ""
            echo "üìú Container logs (last 100 lines):"
            docker compose logs --tail=100
            exit 1
          fi

      - name: 5. Verify dbt setup in container
        run: |
          echo "üîç Checking dbt project structure..."
          docker compose exec -T airflow-webserver ls -la /opt/dbt_project/
          echo ""
          echo "üìÑ Checking dbt_project.yml..."
          docker compose exec -T airflow-webserver cat /opt/dbt_project/dbt_project.yml
          echo ""
          echo "üìÑ Checking profiles.yml..."
          docker compose exec -T airflow-webserver cat /opt/dbt_project/profiles.yml || echo "‚ö†Ô∏è profiles.yml not found or not accessible"

      - name: 6. Run dbt debug command
        run: |
          echo "üîß Running dbt debug..."
          docker compose exec -T -w /opt/dbt_project airflow-webserver dbt debug --target docker_pipeline

      - name: 7. Show logs on failure
        if: failure()
        run: |
          echo "‚ùå Job failed! Showing logs for debugging..."
          docker compose logs --tail=200

      - name: 8. Stop all services
        if: always()
        run: |
          echo "üõë Stopping all services..."
          docker compose down -v
          echo "‚úÖ Cleanup complete"